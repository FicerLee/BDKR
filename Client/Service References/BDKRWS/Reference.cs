//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.BDKRWS {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BDKRWS.IBDKRWS")]
    public interface IBDKRWS {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDKRWS/门店信息_GetList", ReplyAction="http://tempuri.org/IBDKRWS/门店信息_GetListResponse")]
        System.Collections.Generic.List<DataAccess.门店ViewModel> 门店信息_GetList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBDKRWS/门店信息_GetList", ReplyAction="http://tempuri.org/IBDKRWS/门店信息_GetListResponse")]
        System.IAsyncResult Begin门店信息_GetList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<DataAccess.门店ViewModel> End门店信息_GetList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDKRWS/仓库信息_GetList", ReplyAction="http://tempuri.org/IBDKRWS/仓库信息_GetListResponse")]
        System.Collections.Generic.List<DataAccess.仓库ViewModel> 仓库信息_GetList(DataAccess.Filters.仓库Filter filter);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBDKRWS/仓库信息_GetList", ReplyAction="http://tempuri.org/IBDKRWS/仓库信息_GetListResponse")]
        System.IAsyncResult Begin仓库信息_GetList(DataAccess.Filters.仓库Filter filter, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<DataAccess.仓库ViewModel> End仓库信息_GetList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDKRWS/仓库信息_CreateNewCode", ReplyAction="http://tempuri.org/IBDKRWS/仓库信息_CreateNewCodeResponse")]
        string 仓库信息_CreateNewCode();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBDKRWS/仓库信息_CreateNewCode", ReplyAction="http://tempuri.org/IBDKRWS/仓库信息_CreateNewCodeResponse")]
        System.IAsyncResult Begin仓库信息_CreateNewCode(System.AsyncCallback callback, object asyncState);
        
        string End仓库信息_CreateNewCode(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBDKRWSChannel : Client.BDKRWS.IBDKRWS, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class 门店信息_GetListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public 门店信息_GetListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<DataAccess.门店ViewModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<DataAccess.门店ViewModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class 仓库信息_GetListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public 仓库信息_GetListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<DataAccess.仓库ViewModel> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<DataAccess.仓库ViewModel>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class 仓库信息_CreateNewCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public 仓库信息_CreateNewCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BDKRWSClient : System.ServiceModel.ClientBase<Client.BDKRWS.IBDKRWS>, Client.BDKRWS.IBDKRWS {
        
        private BeginOperationDelegate onBegin门店信息_GetListDelegate;
        
        private EndOperationDelegate onEnd门店信息_GetListDelegate;
        
        private System.Threading.SendOrPostCallback on门店信息_GetListCompletedDelegate;
        
        private BeginOperationDelegate onBegin仓库信息_GetListDelegate;
        
        private EndOperationDelegate onEnd仓库信息_GetListDelegate;
        
        private System.Threading.SendOrPostCallback on仓库信息_GetListCompletedDelegate;
        
        private BeginOperationDelegate onBegin仓库信息_CreateNewCodeDelegate;
        
        private EndOperationDelegate onEnd仓库信息_CreateNewCodeDelegate;
        
        private System.Threading.SendOrPostCallback on仓库信息_CreateNewCodeCompletedDelegate;
        
        public BDKRWSClient() {
        }
        
        public BDKRWSClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BDKRWSClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BDKRWSClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BDKRWSClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<门店信息_GetListCompletedEventArgs> 门店信息_GetListCompleted;
        
        public event System.EventHandler<仓库信息_GetListCompletedEventArgs> 仓库信息_GetListCompleted;
        
        public event System.EventHandler<仓库信息_CreateNewCodeCompletedEventArgs> 仓库信息_CreateNewCodeCompleted;
        
        public System.Collections.Generic.List<DataAccess.门店ViewModel> 门店信息_GetList() {
            return base.Channel.门店信息_GetList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult Begin门店信息_GetList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.Begin门店信息_GetList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<DataAccess.门店ViewModel> End门店信息_GetList(System.IAsyncResult result) {
            return base.Channel.End门店信息_GetList(result);
        }
        
        private System.IAsyncResult OnBegin门店信息_GetList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.Begin门店信息_GetList(callback, asyncState);
        }
        
        private object[] OnEnd门店信息_GetList(System.IAsyncResult result) {
            System.Collections.Generic.List<DataAccess.门店ViewModel> retVal = this.End门店信息_GetList(result);
            return new object[] {
                    retVal};
        }
        
        private void On门店信息_GetListCompleted(object state) {
            if ((this.门店信息_GetListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.门店信息_GetListCompleted(this, new 门店信息_GetListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void 门店信息_GetListAsync() {
            this.门店信息_GetListAsync(null);
        }
        
        public void 门店信息_GetListAsync(object userState) {
            if ((this.onBegin门店信息_GetListDelegate == null)) {
                this.onBegin门店信息_GetListDelegate = new BeginOperationDelegate(this.OnBegin门店信息_GetList);
            }
            if ((this.onEnd门店信息_GetListDelegate == null)) {
                this.onEnd门店信息_GetListDelegate = new EndOperationDelegate(this.OnEnd门店信息_GetList);
            }
            if ((this.on门店信息_GetListCompletedDelegate == null)) {
                this.on门店信息_GetListCompletedDelegate = new System.Threading.SendOrPostCallback(this.On门店信息_GetListCompleted);
            }
            base.InvokeAsync(this.onBegin门店信息_GetListDelegate, null, this.onEnd门店信息_GetListDelegate, this.on门店信息_GetListCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<DataAccess.仓库ViewModel> 仓库信息_GetList(DataAccess.Filters.仓库Filter filter) {
            return base.Channel.仓库信息_GetList(filter);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult Begin仓库信息_GetList(DataAccess.Filters.仓库Filter filter, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Begin仓库信息_GetList(filter, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<DataAccess.仓库ViewModel> End仓库信息_GetList(System.IAsyncResult result) {
            return base.Channel.End仓库信息_GetList(result);
        }
        
        private System.IAsyncResult OnBegin仓库信息_GetList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DataAccess.Filters.仓库Filter filter = ((DataAccess.Filters.仓库Filter)(inValues[0]));
            return this.Begin仓库信息_GetList(filter, callback, asyncState);
        }
        
        private object[] OnEnd仓库信息_GetList(System.IAsyncResult result) {
            System.Collections.Generic.List<DataAccess.仓库ViewModel> retVal = this.End仓库信息_GetList(result);
            return new object[] {
                    retVal};
        }
        
        private void On仓库信息_GetListCompleted(object state) {
            if ((this.仓库信息_GetListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.仓库信息_GetListCompleted(this, new 仓库信息_GetListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void 仓库信息_GetListAsync(DataAccess.Filters.仓库Filter filter) {
            this.仓库信息_GetListAsync(filter, null);
        }
        
        public void 仓库信息_GetListAsync(DataAccess.Filters.仓库Filter filter, object userState) {
            if ((this.onBegin仓库信息_GetListDelegate == null)) {
                this.onBegin仓库信息_GetListDelegate = new BeginOperationDelegate(this.OnBegin仓库信息_GetList);
            }
            if ((this.onEnd仓库信息_GetListDelegate == null)) {
                this.onEnd仓库信息_GetListDelegate = new EndOperationDelegate(this.OnEnd仓库信息_GetList);
            }
            if ((this.on仓库信息_GetListCompletedDelegate == null)) {
                this.on仓库信息_GetListCompletedDelegate = new System.Threading.SendOrPostCallback(this.On仓库信息_GetListCompleted);
            }
            base.InvokeAsync(this.onBegin仓库信息_GetListDelegate, new object[] {
                        filter}, this.onEnd仓库信息_GetListDelegate, this.on仓库信息_GetListCompletedDelegate, userState);
        }
        
        public string 仓库信息_CreateNewCode() {
            return base.Channel.仓库信息_CreateNewCode();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult Begin仓库信息_CreateNewCode(System.AsyncCallback callback, object asyncState) {
            return base.Channel.Begin仓库信息_CreateNewCode(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string End仓库信息_CreateNewCode(System.IAsyncResult result) {
            return base.Channel.End仓库信息_CreateNewCode(result);
        }
        
        private System.IAsyncResult OnBegin仓库信息_CreateNewCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.Begin仓库信息_CreateNewCode(callback, asyncState);
        }
        
        private object[] OnEnd仓库信息_CreateNewCode(System.IAsyncResult result) {
            string retVal = this.End仓库信息_CreateNewCode(result);
            return new object[] {
                    retVal};
        }
        
        private void On仓库信息_CreateNewCodeCompleted(object state) {
            if ((this.仓库信息_CreateNewCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.仓库信息_CreateNewCodeCompleted(this, new 仓库信息_CreateNewCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void 仓库信息_CreateNewCodeAsync() {
            this.仓库信息_CreateNewCodeAsync(null);
        }
        
        public void 仓库信息_CreateNewCodeAsync(object userState) {
            if ((this.onBegin仓库信息_CreateNewCodeDelegate == null)) {
                this.onBegin仓库信息_CreateNewCodeDelegate = new BeginOperationDelegate(this.OnBegin仓库信息_CreateNewCode);
            }
            if ((this.onEnd仓库信息_CreateNewCodeDelegate == null)) {
                this.onEnd仓库信息_CreateNewCodeDelegate = new EndOperationDelegate(this.OnEnd仓库信息_CreateNewCode);
            }
            if ((this.on仓库信息_CreateNewCodeCompletedDelegate == null)) {
                this.on仓库信息_CreateNewCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.On仓库信息_CreateNewCodeCompleted);
            }
            base.InvokeAsync(this.onBegin仓库信息_CreateNewCodeDelegate, null, this.onEnd仓库信息_CreateNewCodeDelegate, this.on仓库信息_CreateNewCodeCompletedDelegate, userState);
        }
    }
}
